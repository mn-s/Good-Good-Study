Ä§·¨(Magic)ÃüÁî
IPythonÌá¹©ÁËĞí¶àÄ§·¨ÃüÁî£¬Ê¹µÃÔÚIPython»·¾³ÖĞµÄ²Ù×÷¸ü¼ÓµÃĞÄÓ¦ÊÖ¡£Ä§·¨ÃüÁî¶¼ÒÔ%»òÕß%%¿ªÍ·£¬ÒÔ%¿ªÍ·µÄ³ÉÎªĞĞÃüÁî£¬%%¿ªÍ·µÄ³ÆÎªµ¥ÔªÃüÁî¡£
ĞĞÃüÁîÖ»¶ÔÃüÁîËùÔÚµÄĞĞÓĞĞ§£¬¶øµ¥ÔªÃüÁîÔò±ØĞë³öÏÖÔÚµ¥ÔªµÄµÚÒ»ĞĞ£¬¶ÔÕû¸öµ¥ÔªµÄ´úÂë½øĞĞ´¦Àí¡£

Ö´ĞĞ%magic¿ÉÒÔ²é¿´¹ØÓÚ¸÷¸öÃüÁîµÄËµÃ÷£¬¶øÔÚÃüÁîÖ®ºóÌí¼Ó?¿ÉÒÔ²é¿´¸ÃÃüÁîµÄÏêÏ¸ËµÃ÷¡£

%matplotlibÏÔÊ¾matplotlibÍ¼±í
  matplotlibÊÇ×îÖøÃûµÄPythonÍ¼±í»æÖÆÀ©Õ¹¿â£¬ËüÖ§³ÖÊä³ö¶àÖÖ¸ñÊ½µÄÍ¼ĞÎÍ¼Ïñ£¬²¢ÇÒ¿ÉÒÔÊ¹ÓÃ¶àÖÖGUI½çÃæ¿â½»»¥Ê½µØÏÔÊ¾Í¼±í¡£
  Ê¹ÓÃ%matplotlibÃüÁî¿ÉÒÔ½«matplotlibµÄÍ¼±íÖ±½ÓÇ¶Èëµ½NotebookÖ®ÖĞ£¬»òÕßÊ¹ÓÃÖ¸¶¨µÄ½çÃæ¿âÏÔÊ¾Í¼±í£¬ËüÓĞÒ»¸ö²ÎÊıÖ¸¶¨matplotlibÍ¼±íµÄÏÔÊ¾·½Ê½¡£

ÔÚÏÂÃæµÄÀı×ÓÖĞ£¬inline±íÊ¾½«Í¼±íÇ¶Èëµ½NotebookÖĞ¡£Òò´Ë×îºóÒ»ĞĞpl.plot()Ëù´´½¨µÄÍ¼±í½«Ö±½ÓÏÔÊ¾ÔÚ¸Ãµ¥ÔªÖ®ÏÂ£¬ÓÉÓÚÎÒÃÇ²»ĞèÒª²é¿´×îºóÒ»ĞĞ·µ»ØµÄ¶ÔÏó£¬Òò´ËÒÔ·ÖºÅ½áÊø¸ÃĞĞ¡£

%matplotlib inline
  import pylab as pl
  pl.seed(1)
  data = pl.randn(100)
  pl.plot(data);
  /tech/static/books/scipynew/_images//ipython-200-notebook-magic_output_4_0.png
  ÄÚÇ¶Í¼±íµÄÊä³ö¸ñÊ½È±Ê¡ÎªPNG£¬¿ÉÒÔÍ¨¹ı%configÃüÁîĞŞ¸ÄÕâ¸öÅäÖÃ¡£%configÃüÁî¿ÉÒÔÅäÖÃIPythonÖĞµÄ¸÷¸ö¿ÉÅäÖÃ¶ÔÏó£¬ÆäÖĞInlineBackend¶ÔÏóÎªmatplotlibÊä³öÄÚÇ¶Í¼±íÊ±ËùÊ¹ÓÃµÄ¶ÔÏó£¬ÎÒÃÇÅäÖÃËüµÄfigure_format="svg"£¬ÕâÑù½«ÄÚÇ¶Í¼±íµÄÊä³ö¸ñÊ½ĞŞ¸ÄÎªSVG¡£

%config InlineBackend.figure_format="svg"
%matplotlib inline
 pl.plot(data);
 ÄÚÇ¶Í¼±íºÜÊÊºÏÖÆ×÷Í¼ÎÄ²¢Ã¯µÄNotebook£¬È»¶øËüÃÇÊÇ¾²Ì¬µÄÎŞ·¨½øĞĞ½»»¥¡£ÕâÊ±¿ÉÒÔ½«Í¼±íÊä³öÄ£Ê½ĞŞ¸ÄÎªÊ¹ÓÃGUI½çÃæ¿â£¬ÏÂÃæµÄqt4±íÊ¾Ê¹ÓÃQT4½çÃæ¿âÏÔÊ¾Í¼±í¡£Çë¶ÁÕß¸ù¾İ×Ô¼ºÏµÍ³µÄÅäÖÃ£¬Ñ¡ÔñºÏÊÊµÄ½çÃæ¿â£º¡¯gtk¡¯, ¡®osx¡¯, ¡®qt¡¯, qt4¡¯, ¡®tk¡¯, ¡®wx¡¯¡£
 Ö´ĞĞÏÂÃæµÄÓï¾ä½«µ¯³öÒ»¸ö´°¿ÚÏÔÊ¾Í¼±í£¬¿ÉÒÔÍ¨¹ıÊó±êºÍ¼üÅÌÓë´ËÍ¼±í½»»¥¡£Çë×¢Òâ¸Ã¹¦ÄÜÖ»ÄÜÔÚÔËĞĞIPython KernelµÄ»úÆ÷ÉÏÏÔÊ¾Í¼±í¡£

%matplotlib qt4
 pl.plot(data);
 
 
 
ĞÔÄÜ·ÖÎö
ĞÔÄÜ·ÖÎö¶Ô±àĞ´´¦Àí´óÁ¿Êı¾İµÄ³ÌĞò·Ç³£ÖØÒª£¬ÌØ±ğÊÇPythonÕâÑùµÄ¶¯Ì¬ÓïÑÔ£¬Ò»ÌõÓï¾ä¿ÉÄÜ»áÖ´ĞĞºÜ¶àÄÚÈİ£¬ÓĞµÄÊÇ¶¯Ì¬µÄ£¬ÓĞµÄµ÷ÓÃ¶ş½øÖÆÀ©Õ¹¿â£¬²»½øĞĞĞÔÄÜ·ÖÎö£¬¾ÍÎŞ·¨¶Ô³ÌĞò½øĞĞÓÅ»¯¡£IPythonÌá¹©ÁËĞí¶à½øĞĞĞÔÄÜ·ÖÎöµÄÄ§·¨ÃüÁî¡£

%timeit µ÷ÓÃtimeitÄ£¿é¶Ôµ¥ĞĞÓï¾äÖØ¸´Ö´ĞĞ¶à´Î£¬¼ÆËã³öÆäÖ´ĞĞÊ±¼ä¡£ÏÂÃæµÄ´úÂë²âÊÔĞŞ¸ÄÁĞ±íµ¥¸öÔªËØËùĞèµÄÊ±¼ä¡£
  a = [1,2,3]
%timeit a[1] = 10
  10000000 loops, best of 3: 164 ns per loop
%%timeitÔòÓÃÓÚ²âÊÔÕû¸öµ¥ÔªÖĞ´úÂëµÄÖ´ĞĞÊ±¼ä¡£ÏÂÃæµÄ´úÂë²âÊÔ¿ÕÁĞ±íÖĞÑ­»·Ìí¼Ó10¸öÔªËØËùĞíµÄÊ±¼ä£º
%%timeit
 a = []
 for i in xrange(10):
     a.append(i)
 100000 loops, best of 3: 3.85 ¦Ìs per loop
 timeitÃüÁî»áÖØ¸´Ö´ĞĞ´úÂë¶à´Î£¬¶øtimeÔòÖ»Ö´ĞĞÒ»´Î´úÂë£¬Êä³ö´úÂëµÄÖ´ĞĞÇé¿ö£¬ºÍtimeitÃüÁîÒ»Ñù£¬Ëü¿ÉÒÔ×÷ÎªĞĞÃüÁîºÍµ¥ÔªÃüÁî¡£ÏÂÃæµÄ´úÂëÍ³¼ÆÍù¿ÕÁĞ±íÖĞÌí¼Ó10Íò¸öÔªËØËùĞèµÄÊ±¼ä¡£

%%time
 a = []
 for i in xrange(100000):
     a.append(i)
 CPU times: user 44 ms, sys: 4 ms, total: 48 ms
 Wall time: 51.9 ms
 timeºÍtimeitÃüÁî¶¼½«ĞÅÏ¢Ê¹ÓÃprintÊä³ö£¬Èç¹ûÏ£ÍûÓÃ³ÌĞò·ÖÎöÕâĞ©ĞÅÏ¢£¬¿ÉÒÔÊ¹ÓÃ

%%captureÃüÁî£¬½«µ¥Ôª¸ñµÄÊä³ö±£´æÎªÒ»¸ö¶ÔÏó¡£ÏÂÃæµÄ³ÌĞò¶Ô²»Í¬³¤¶ÈµÄÊı×éµ÷ÓÃsort()º¯Êı½øĞĞÅÅĞò£¬²¢Ê¹ÓÃ%timeitÃüÁîÍ³¼ÆÅÅĞòËùĞèµÄÊ±¼ä¡£ÎªÁË¼Ó¿ì³ÌĞòµÄ¼ÆËãËÙ¶È£¬ÕâÀïÍ¨¹ı-n20Ö¸¶¨´úÂëµÄÔËĞĞ´ÎÊıÎª20´Î¡£ÓÉÓÚÊ¹ÓÃÁË%%captureÃüÁî£¬³ÌĞòÖ´ĞĞÖ®ºóÃ»ÓĞÊä³ö£¬ËùÓĞÊä³ö¶¼±»±£´æ½øÁËresult¶ÔÏó¡£
%%capture result
 import numpy as np
 for n in [1000, 5000, 10000, 50000, 100000, 500000]:
    arr = np.random.rand(n)
    print "n={0}".format(n)
    %timeit -n20 np.sort(arr)
 result.stdoutÊôĞÔÖĞ±£´æÍ¨¹ı±ê×¼Êä³ö¹ÜµÀÖĞµÄÊä³öĞÅÏ¢£º

print result.stdout
n=1000
20 loops, best of 3: 127 us per loop
n=5000
20 loops, best of 3: 746 us per loop
n=10000
20 loops, best of 3: 1.69 ms per loop
n=50000
20 loops, best of 3: 9.22 ms per loop
n=100000
20 loops, best of 3: 19.7 ms per loop
n=500000
20 loops, best of 3: 110 ms per loop
ÏÂÃæµÄ´úÂëÊ¹ÓÃreÄ£¿é´ÓÉÏÃæµÄ×Ö·û´®ÖĞ»ñÈ¡Êı×é³¤¶ÈºÍÅÅĞòÖ´ĞĞÊ±¼äµÄĞÅÏ¢£¬²¢½«Æä»æÖÆ³ÉÍ¼±í¡£Í¼±íµÄºá×ø±êÎª¶ÔÊı×ø±êÖá£¬±íÊ¾Êı×éµÄ³¤¶È£»×İ×ø±êÎªÆ½¾ùÃ¿¸öÔªËØËùĞèµÄÅÅĞòÊ±¼ä¡£¿ÉÒÔ¿´³öÃ¿¸öÔªËØËùĞèµÄÆ½¾ùÅÅĞòÊ±¼äÓëÊı×éµÄ³¤¶ÈµÄ¶ÔÊı³ÉÕı±È£¬Òò´Ë¿ÉÒÔ¼ÆËã³öÅÅĞòº¯Êısort()µÄÊ±¼ä¸´ÔÓ¶ÈÎª£ºO(n \log{n})¡£

def tosec(t):
    units = {"ns":1e-9, "us":1e-6, "ms":1e-3, "s":1}
    value, unit = t.strip().split()
    return float(value) * units[unit]

import re
info = re.findall(r"n=(.+?)\n.+?best of 3: (.+?) per loop", result.stdout)
info = [(int(t0), tosec(t1)) for t0, t1 in info]
x, y = np.r_[info].T
pl.semilogx(x, y/x, "-o");

%%prunÃüÁîµ÷ÓÃprofileÄ£¿é£¬¶Ôµ¥ÔªÖĞµÄ´úÂë½øĞĞĞÔÄÜÆÊÎö¡£ÏÂÃæµÄĞÔÄÜÆÊÎöÏÔÊ¾fib()ÔËĞĞÁË21891´Î£¬¶øfib_fast()ÔòÖ»ÔËĞĞÁË20´Î¡£
%%nopage
%%prun
def fib(n):
    if n < 2:
        return 1
    else:
        return fib(n-1) + fib(n-2)

def fib_fast(n, a=1, b=1):
    if n == 1:
        return b
    else:
        return fib_fast(n-1, b, a+b)

fib(20)
fib_fast(20)
       21913 function calls (4 primitive calls) in 0.084 seconds

 Ordered by: internal time

 ncalls  tottime  percall  cumtime  percall filename:lineno(function)
21891/1    0.084    0.000    0.084    0.084 <string>:2(fib)
   20/1    0.000    0.000    0.000    0.000 <string>:8(fib_fast)
      1    0.000    0.000    0.084    0.084 <string>:2(<module>)
      1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
´úÂëµ÷ÊÔ
%debugÃüÁîÓÃÓÚµ÷ÊÔ´úÂë£¬ËüÓĞÁ½ÖÖÓÃ·¨¡£Ò»ÖÖÊÇÔÚÖ´ĞĞ´úÂëÖ®Ç°ÉèÖÃ¶Ïµã½øĞĞµ÷ÊÔ£¬µÚ¶şÖÖÔòÊÇÔÚ´úÂëÅ×³öÒì³£Ö®ºó£¬Ö´ĞĞ%debugÃüÁî²é¿´µ÷ÓÃ¶ÑÕ»¡£ÏÂÃæÏÈÑİÊ¾µÚ¶şÖÖ·½·¨µÄÓÃ·¨£º

import pylab as pl
import numpy as np

def test_debug():
    x = np.linspace(1, 50, 10000)
    img = np.sin(x*np.cos(x))
    pl.imshow(img)
    pl.show()

test_debug()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-8-718b55b6e471> in <module>()
      8     pl.show()
      9
---> 10 test_debug()

<ipython-input-8-718b55b6e471> in test_debug()
      5     x = np.linspace(1, 50, 10000)
      6     img = np.sin(x*np.cos(x))
----> 7     pl.imshow(img)
      8     pl.show()
      9

/home/hyry/anaconda/lib/python2.7/site-packages/matplotlib/pyplot.pyc in imshow(X, cmap, norm, aspect, interpolation, alpha, vmin, vmax, origin, extent, shape, filternorm, filterrad, imlim, resample, url, hold, **kwargs)
   2735                         vmax=vmax, origin=origin, extent=extent, shape=shape,
   2736                         filternorm=filternorm, filterrad=filterrad,
-> 2737                         imlim=imlim, resample=resample, url=url, **kwargs)
   2738         draw_if_interactive()
   2739     finally:

/home/hyry/anaconda/lib/python2.7/site-packages/matplotlib/axes.pyc in imshow(self, X, cmap, norm, aspect, interpolation, alpha, vmin, vmax, origin, extent, shape, filternorm, filterrad, imlim, resample, url, **kwargs)
   7103                        filterrad=filterrad, resample=resample, **kwargs)
   7104
-> 7105         im.set_data(X)
   7106         im.set_alpha(alpha)
   7107         self._set_artist_props(im)

/home/hyry/anaconda/lib/python2.7/site-packages/matplotlib/image.pyc in set_data(self, A)
    420         if (self._A.ndim not in (2, 3) or
    421             (self._A.ndim == 3 and self._A.shape[-1] not in (3, 4))):
--> 422             raise TypeError("Invalid dimensions for image data")
    423
    424         self._imcache =None

TypeError: Invalid dimensions for image data
%debug
> [1;32m/home/hyry/anaconda/lib/python2.7/site-packages/matplotlib/image.py[0m(422)[0;36mset_data[1;34m()[0m
[1;32m    421 [1;33m            (self._A.ndim == 3 and self._A.shape[-1] not in (3, 4))):
[0m[1;32m--> 422 [1;33m            [1;32mraise[0m [0mTypeError[0m[1;33m([0m[1;34m"Invalid dimensions for image data"[0m[1;33m)[0m[1;33m[0m[0m
[0m[1;32m    423 [1;33m[1;33m[0m[0m
[0m
ipdb> l
%config InlineBackend.figure_format="svg"
%matplotlib inline

def test_debug():
    x = np.linspace(1, 50, 10000)
    img = np.sin(x*np.cos(x)).reshape(100, -1)
    pl.imshow(img)
    pl.show()

test_debug()

%%writefile debug_test.py
a = 1
b = 2
print a + b
Writing debug_test.py
%debug --breakpoint debug_test.py:2
Breakpoint 1 at /home/hyry/Dropbox/scipybook2/debug_test.py:2
NOTE: Enter 'c' at the ipdb>  prompt to continue execution.
%run -d debug_test.py
Breakpoint 1 at /home/hyry/Dropbox/scipybook2/debug_test.py:1
NOTE: Enter 'c' at the ipdb>  prompt to continue execution.
> [1;32m/home/hyry/Dropbox/scipybook2/debug_test.py[0m(1)[0;36m<module>[1;34m()[0m
[1;31m1[1;32m---> 1 [1;33m[0ma[0m [1;33m=[0m [1;36m1[0m[1;33m[0m[0m
[0m[1;32m      2 [1;33m[0mb[0m [1;33m=[0m [1;36m2[0m[1;33m[0m[0m
[0m[1;32m      3 [1;33m[1;32mprint[0m [0ma[0m [1;33m+[0m [0mb[0m[1;33m[0m[0m
[0m
ipdb> c
%run?